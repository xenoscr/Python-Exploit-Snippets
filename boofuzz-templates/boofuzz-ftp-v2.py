#!/usr/bin/env python
import sys
from boofuzz import *

def recieve_ftp_banner(sock):
	username = 'anonymous'
	password = 'anony@mous.com'
	sock.recv(1024)
	sock.send('USER {0}\r\n'.format(username))
	sock.recv(1024)
	sock.send('PASS {0}\r\n'.format(password))
	sock.recv(1024)

def callback(session, node, edge, sock):
        if ((not session.last_recv) and (session.last_send)):
                print session.last_send
                print len(session.last_send)
                sys.exit(-1)

def main():
	host = '127.0.0.1'
	port = 21
	username = 'anonymous'
	password = 'anony@mous.com'

	with open('boofuzz-ftp.log', 'wb') as f:
		logger = FuzzLogger(fuzz_loggers=[FuzzLoggerText(file_handle=f)])

		session = Session(
			target=Target(
				connection=SocketConnection(host, int(port), proto='tcp')
			),
			fuzz_data_logger=logger
		)

		s_initialize("user")
		s_string('USER', name='User-Command')
		s_static(' ', name='User-Space')
		s_string(username, name='User-Username')
		s_static('\r\n', name='User-CRLF')

		s_initialize("pass")
		s_string('PASS', name='Pass-Command')
		s_static(' ', name='Pass-Space')
		s_string(password, name='Pass-Password')
		s_static('\r\n', name='Pass-CRLF')

		s_initialize("cwd")
		s_static('CWD', name='CWD-Command')
		s_static(' ', name='CWD-Space')
		s_string('C: ', name='CWD-Password')
		s_static('\r\n', name='CWD-CRLF')

		s_initialize("dele")
		s_static('DELE', name='DELE-Command')
		s_static(' ', name='DELE-Space')
		s_string('C:\\test.txt', name='DELE-Password')
		s_static('\r\n', name='DELE-CRLF')

		s_initialize("mdtm")
		s_static('MDTM', name='MDTM-Command')
		s_static(' ', name='MDTM-Space')
		s_string('C:\\boot.ini', name='MDTM-Password')
		s_static('\r\n', name='MDTM-CRLF')

		s_initialize("mkd")
		s_static('MKD', name='MKD-Command')
		s_static(' ', name='MKD-Space')
		s_string('C:\\testdir', name='MKD-Password')
		s_static('\r\n', name='MKD-CRLF')

		session.pre_send = recieve_ftp_banner

		session.connect(s_get("cwd"), callback=callback)
		session.connect(s_get("dele"), callback=callback)
		session.connect(s_get("mdtm"), callback=callback)
		session.connect(s_get("mkd"), callback=callback)

		session.fuzz()

if __name__ == '__main__':
	main()
